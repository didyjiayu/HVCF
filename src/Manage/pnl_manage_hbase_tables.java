/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Manage;

import com.jidesoft.grid.AutoFilterTableHeader;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.TableExistsException;
import org.apache.hadoop.hbase.client.HBaseAdmin;
import org.apache.hadoop.hbase.client.HTable;
import org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;

/**
 *
 * @author yujia1986
 */
public class pnl_manage_hbase_tables extends javax.swing.JPanel {

    /**
     * Creates new form pnl_hbase_table
     */
    public pnl_manage_hbase_tables() {
        initComponents();
        pnl_manage_hbase_tables.showHBaseTables runabletask = new pnl_manage_hbase_tables.showHBaseTables();
        new Thread(runabletask).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_hbase_tables = new com.jidesoft.grid.SortableTable();
        btn_change_name = new javax.swing.JButton();
        btn_delete_table = new javax.swing.JButton();
        btn_view = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_manage_hbase_table_description = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("HBase Tables Available"));

        tbl_hbase_tables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbl_hbase_tables);

        btn_change_name.setText("Change Name");
        btn_change_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_change_nameActionPerformed(evt);
            }
        });

        btn_delete_table.setText("Delete Table");
        btn_delete_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_tableActionPerformed(evt);
            }
        });

        btn_view.setText("View");
        btn_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btn_view, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btn_delete_table, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btn_change_name, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(btn_clear, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_change_name, btn_clear, btn_delete_table, btn_view});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_change_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_delete_table)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_view)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_manage_hbase_table_description.setEditable(false);
        txt_manage_hbase_table_description.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_manage_hbase_table_description.setLineWrap(true);
        txt_manage_hbase_table_description.setRows(5);
        txt_manage_hbase_table_description.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Description"));
        jScrollPane2.setViewportView(txt_manage_hbase_table_description);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_delete_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_tableActionPerformed
        try {
            // TODO add your handling code here:
            String tableName = this.selectedTableName();
            this.deleteTable(tableName);
            String path = System.getProperty("user.dir");
            path = path+"/HVCF/HBase/"+tableName;
            File temp = new File(path);
            this.deleteDir(temp);
            pnl_manage_hbase_tables.showHBaseTables runabletask = new pnl_manage_hbase_tables.showHBaseTables();
            new Thread(runabletask).start();
        } catch (IOException ex) {
            Logger.getLogger(pnl_manage_hbase_tables.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_delete_tableActionPerformed

    private void btn_change_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_change_nameActionPerformed
        try {
            // TODO add your handling code here:
            String oldTableName = selectedTableName();
            String newTableName = JOptionPane.showInputDialog("Please give a new table name:", oldTableName);
            rename(oldTableName, newTableName);
            pnl_manage_hbase_tables.showHBaseTables runabletask = new pnl_manage_hbase_tables.showHBaseTables();
            new Thread(runabletask).start();
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(pnl_manage_hbase_tables.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_change_nameActionPerformed

    private void btn_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewActionPerformed
        try {
            // TODO add your handling code here:
            String tableName = selectedTableName();
            txt_manage_hbase_table_description.setText(null);
            HTableDescriptor tableDescriptor = getTableDescriptor(tableName);
            txt_manage_hbase_table_description.setText(tableDescriptor.toString());
        } catch (IOException ex) {
            Logger.getLogger(pnl_manage_hbase_tables.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_viewActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        txt_manage_hbase_table_description.setText(null);
    }//GEN-LAST:event_btn_clearActionPerformed

    public void deleteTable(String tablename) throws IOException {
        Configuration conf = HBaseConfiguration.create();
        HBaseAdmin admin = new HBaseAdmin(conf);
        if (!admin.isTableEnabled(tablename)) admin.enableTable(tablename);
        admin.disableTable(tablename);
        admin.deleteTable(tablename);
    }

    public void rename(String oldTableName, String newTableName) throws IOException, TableExistsException, RestoreSnapshotException, InterruptedException {
        Configuration conf = HBaseConfiguration.create();
        HBaseAdmin admin = new HBaseAdmin(conf);
        String snapshotName = "tmp";
        admin.disableTable(oldTableName);
        admin.snapshot(snapshotName, oldTableName);
        admin.cloneSnapshot(snapshotName, newTableName);
        admin.deleteSnapshot(snapshotName);
        admin.deleteTable(oldTableName);
    }

    public class showHBaseTables implements Runnable {

        public HTableDescriptor[] listHBaseTables() throws IOException {
            Configuration conf = HBaseConfiguration.create();
            HBaseAdmin admin = new HBaseAdmin(conf);
            return admin.listTables();
        }

        private void showHBaseTables() {
            try {
                // TODO add your handling code here:
                tbl_hbase_tables.setModel(null);
                HTableDescriptor[] tablesDescriptor = this.listHBaseTables();
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Table Name");
                model.addColumn("Table Columnfamily Names");
                AutoFilterTableHeader _header = new AutoFilterTableHeader(tbl_hbase_tables);
                _header.setAutoFilterEnabled(true);
                _header.setReorderingAllowed(false);
                _header.setUseNativeHeaderRenderer(true);
                tbl_hbase_tables.setTableHeader(_header);
                for (HTableDescriptor descriptor : tablesDescriptor) {
                    ArrayList<String> row = new ArrayList<>();
                    row.add(descriptor.getNameAsString());
                    StringBuilder builder = new StringBuilder();
                    HColumnDescriptor[] cDescriptor = descriptor.getColumnFamilies();
                    for (int i = 0; i < cDescriptor.length; i++) {
                        if (i > 0) {
                            builder.append(" ,");
                        }
                        builder.append(cDescriptor[i].getNameAsString());
                    }
                    row.add(builder.toString());
                    String[] rowArray = row.toArray(new String[row.size()]);
                    model.addRow(rowArray);
                }
                tbl_hbase_tables.setModel(model);
            } catch (IOException ex) {
                Logger.getLogger(pnl_manage_hbase_tables.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        @Override
        public void run() {
            showHBaseTables();
        }
    }

    public String selectedTableName() {
        String selectTableName = tbl_hbase_tables.getValueAt(tbl_hbase_tables.getSelectedRow(), 0).toString();
        return selectTableName;
    }

    public String[] selectedTableFamilies() {
        String selectTableFamilies = tbl_hbase_tables.getValueAt(tbl_hbase_tables.getSelectedRow(), 1).toString();
        String[] families = selectTableFamilies.split(",", -1);
        for (int i = 0; i < families.length; i++) {
            families[i] = families[i].trim();
        }
        return families;
    }

    public HTableDescriptor getTableDescriptor(String tableName) throws IOException {
        Configuration conf = HBaseConfiguration.create();
        HTable table = new HTable(conf, tableName);
        return table.getTableDescriptor();
    }

    public boolean deleteDir(File dir) {
        if (dir.isDirectory()) {
            String[] children = dir.list();
            for (int i = 0; i < children.length; i++) {
                boolean success = deleteDir(new File(dir, children[i]));
                if (!success) {
                    return false;
                }
            }
        }
        return dir.delete();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_change_name;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete_table;
    private javax.swing.JButton btn_view;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.jidesoft.grid.SortableTable tbl_hbase_tables;
    private javax.swing.JTextArea txt_manage_hbase_table_description;
    // End of variables declaration//GEN-END:variables
}
